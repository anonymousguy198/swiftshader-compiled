# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 3.18

# Default target executed when no arguments are given to make.
default_target: all

.PHONY : default_target

# Allow only one "make -f Makefile2" at a time, but pass parallelism.
.NOTPARALLEL:


#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:


# Disable VCS-based implicit rules.
% : %,v


# Disable VCS-based implicit rules.
% : RCS/%


# Disable VCS-based implicit rules.
% : RCS/%,v


# Disable VCS-based implicit rules.
% : SCCS/s.%


# Disable VCS-based implicit rules.
% : s.%


.SUFFIXES: .hpux_make_needs_suffix_list


# Command-line flag to silence nested $(MAKE).
$(VERBOSE)MAKESILENT = -s

#Suppress display of executed commands.
$(VERBOSE).SILENT:

# A target that is always out of date.
cmake_force:

.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = /usr/local/bin/cmake

# The command to remove a file.
RM = /usr/local/bin/cmake -E rm -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = /home/gamer/github_projects/swiftshader

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = /home/gamer/github_projects/swiftshader/build

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target install/strip
install/strip: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing the project stripped..."
	/usr/local/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip

# Special rule for the target install/strip
install/strip/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing the project stripped..."
	/usr/local/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip/fast

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake cache editor..."
	/usr/local/bin/ccmake -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache

.PHONY : edit_cache/fast

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
	/usr/local/bin/cmake --regenerate-during-build -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache

.PHONY : rebuild_cache/fast

# Special rule for the target list_install_components
list_install_components:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Available install components are: \"Unspecified\""
.PHONY : list_install_components

# Special rule for the target list_install_components
list_install_components/fast: list_install_components

.PHONY : list_install_components/fast

# Special rule for the target install/local
install/local: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing only the local directory..."
	/usr/local/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local

# Special rule for the target install/local
install/local/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing only the local directory..."
	/usr/local/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local/fast

# Special rule for the target install
install: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
	/usr/local/bin/cmake -P cmake_install.cmake
.PHONY : install

# Special rule for the target install
install/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
	/usr/local/bin/cmake -P cmake_install.cmake
.PHONY : install/fast

# The main all target
all: cmake_check_build_system
	cd /home/gamer/github_projects/swiftshader/build && $(CMAKE_COMMAND) -E cmake_progress_start /home/gamer/github_projects/swiftshader/build/CMakeFiles /home/gamer/github_projects/swiftshader/build/third_party/marl//CMakeFiles/progress.marks
	cd /home/gamer/github_projects/swiftshader/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 third_party/marl/all
	$(CMAKE_COMMAND) -E cmake_progress_start /home/gamer/github_projects/swiftshader/build/CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	cd /home/gamer/github_projects/swiftshader/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 third_party/marl/clean
.PHONY : clean

# The main clean target
clean/fast: clean

.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	cd /home/gamer/github_projects/swiftshader/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 third_party/marl/preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	cd /home/gamer/github_projects/swiftshader/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 third_party/marl/preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	cd /home/gamer/github_projects/swiftshader/build && $(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
.PHONY : depend

# Convenience name for target.
third_party/marl/CMakeFiles/marl.dir/rule:
	cd /home/gamer/github_projects/swiftshader/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 third_party/marl/CMakeFiles/marl.dir/rule
.PHONY : third_party/marl/CMakeFiles/marl.dir/rule

# Convenience name for target.
marl: third_party/marl/CMakeFiles/marl.dir/rule

.PHONY : marl

# fast build rule for target.
marl/fast:
	cd /home/gamer/github_projects/swiftshader/build && $(MAKE) $(MAKESILENT) -f third_party/marl/CMakeFiles/marl.dir/build.make third_party/marl/CMakeFiles/marl.dir/build
.PHONY : marl/fast

src/debug.o: src/debug.cpp.o

.PHONY : src/debug.o

# target to build an object file
src/debug.cpp.o:
	cd /home/gamer/github_projects/swiftshader/build && $(MAKE) $(MAKESILENT) -f third_party/marl/CMakeFiles/marl.dir/build.make third_party/marl/CMakeFiles/marl.dir/src/debug.cpp.o
.PHONY : src/debug.cpp.o

src/debug.i: src/debug.cpp.i

.PHONY : src/debug.i

# target to preprocess a source file
src/debug.cpp.i:
	cd /home/gamer/github_projects/swiftshader/build && $(MAKE) $(MAKESILENT) -f third_party/marl/CMakeFiles/marl.dir/build.make third_party/marl/CMakeFiles/marl.dir/src/debug.cpp.i
.PHONY : src/debug.cpp.i

src/debug.s: src/debug.cpp.s

.PHONY : src/debug.s

# target to generate assembly for a file
src/debug.cpp.s:
	cd /home/gamer/github_projects/swiftshader/build && $(MAKE) $(MAKESILENT) -f third_party/marl/CMakeFiles/marl.dir/build.make third_party/marl/CMakeFiles/marl.dir/src/debug.cpp.s
.PHONY : src/debug.cpp.s

src/memory.o: src/memory.cpp.o

.PHONY : src/memory.o

# target to build an object file
src/memory.cpp.o:
	cd /home/gamer/github_projects/swiftshader/build && $(MAKE) $(MAKESILENT) -f third_party/marl/CMakeFiles/marl.dir/build.make third_party/marl/CMakeFiles/marl.dir/src/memory.cpp.o
.PHONY : src/memory.cpp.o

src/memory.i: src/memory.cpp.i

.PHONY : src/memory.i

# target to preprocess a source file
src/memory.cpp.i:
	cd /home/gamer/github_projects/swiftshader/build && $(MAKE) $(MAKESILENT) -f third_party/marl/CMakeFiles/marl.dir/build.make third_party/marl/CMakeFiles/marl.dir/src/memory.cpp.i
.PHONY : src/memory.cpp.i

src/memory.s: src/memory.cpp.s

.PHONY : src/memory.s

# target to generate assembly for a file
src/memory.cpp.s:
	cd /home/gamer/github_projects/swiftshader/build && $(MAKE) $(MAKESILENT) -f third_party/marl/CMakeFiles/marl.dir/build.make third_party/marl/CMakeFiles/marl.dir/src/memory.cpp.s
.PHONY : src/memory.cpp.s

src/osfiber_aarch64.o: src/osfiber_aarch64.c.o

.PHONY : src/osfiber_aarch64.o

# target to build an object file
src/osfiber_aarch64.c.o:
	cd /home/gamer/github_projects/swiftshader/build && $(MAKE) $(MAKESILENT) -f third_party/marl/CMakeFiles/marl.dir/build.make third_party/marl/CMakeFiles/marl.dir/src/osfiber_aarch64.c.o
.PHONY : src/osfiber_aarch64.c.o

src/osfiber_aarch64.i: src/osfiber_aarch64.c.i

.PHONY : src/osfiber_aarch64.i

# target to preprocess a source file
src/osfiber_aarch64.c.i:
	cd /home/gamer/github_projects/swiftshader/build && $(MAKE) $(MAKESILENT) -f third_party/marl/CMakeFiles/marl.dir/build.make third_party/marl/CMakeFiles/marl.dir/src/osfiber_aarch64.c.i
.PHONY : src/osfiber_aarch64.c.i

src/osfiber_aarch64.s: src/osfiber_aarch64.c.s

.PHONY : src/osfiber_aarch64.s

# target to generate assembly for a file
src/osfiber_aarch64.c.s:
	cd /home/gamer/github_projects/swiftshader/build && $(MAKE) $(MAKESILENT) -f third_party/marl/CMakeFiles/marl.dir/build.make third_party/marl/CMakeFiles/marl.dir/src/osfiber_aarch64.c.s
.PHONY : src/osfiber_aarch64.c.s

src/osfiber_arm.o: src/osfiber_arm.c.o

.PHONY : src/osfiber_arm.o

# target to build an object file
src/osfiber_arm.c.o:
	cd /home/gamer/github_projects/swiftshader/build && $(MAKE) $(MAKESILENT) -f third_party/marl/CMakeFiles/marl.dir/build.make third_party/marl/CMakeFiles/marl.dir/src/osfiber_arm.c.o
.PHONY : src/osfiber_arm.c.o

src/osfiber_arm.i: src/osfiber_arm.c.i

.PHONY : src/osfiber_arm.i

# target to preprocess a source file
src/osfiber_arm.c.i:
	cd /home/gamer/github_projects/swiftshader/build && $(MAKE) $(MAKESILENT) -f third_party/marl/CMakeFiles/marl.dir/build.make third_party/marl/CMakeFiles/marl.dir/src/osfiber_arm.c.i
.PHONY : src/osfiber_arm.c.i

src/osfiber_arm.s: src/osfiber_arm.c.s

.PHONY : src/osfiber_arm.s

# target to generate assembly for a file
src/osfiber_arm.c.s:
	cd /home/gamer/github_projects/swiftshader/build && $(MAKE) $(MAKESILENT) -f third_party/marl/CMakeFiles/marl.dir/build.make third_party/marl/CMakeFiles/marl.dir/src/osfiber_arm.c.s
.PHONY : src/osfiber_arm.c.s

src/osfiber_asm_aarch64.o: src/osfiber_asm_aarch64.S.o

.PHONY : src/osfiber_asm_aarch64.o

# target to build an object file
src/osfiber_asm_aarch64.S.o:
	cd /home/gamer/github_projects/swiftshader/build && $(MAKE) $(MAKESILENT) -f third_party/marl/CMakeFiles/marl.dir/build.make third_party/marl/CMakeFiles/marl.dir/src/osfiber_asm_aarch64.S.o
.PHONY : src/osfiber_asm_aarch64.S.o

src/osfiber_asm_arm.o: src/osfiber_asm_arm.S.o

.PHONY : src/osfiber_asm_arm.o

# target to build an object file
src/osfiber_asm_arm.S.o:
	cd /home/gamer/github_projects/swiftshader/build && $(MAKE) $(MAKESILENT) -f third_party/marl/CMakeFiles/marl.dir/build.make third_party/marl/CMakeFiles/marl.dir/src/osfiber_asm_arm.S.o
.PHONY : src/osfiber_asm_arm.S.o

src/osfiber_asm_mips64.o: src/osfiber_asm_mips64.S.o

.PHONY : src/osfiber_asm_mips64.o

# target to build an object file
src/osfiber_asm_mips64.S.o:
	cd /home/gamer/github_projects/swiftshader/build && $(MAKE) $(MAKESILENT) -f third_party/marl/CMakeFiles/marl.dir/build.make third_party/marl/CMakeFiles/marl.dir/src/osfiber_asm_mips64.S.o
.PHONY : src/osfiber_asm_mips64.S.o

src/osfiber_asm_ppc64.o: src/osfiber_asm_ppc64.S.o

.PHONY : src/osfiber_asm_ppc64.o

# target to build an object file
src/osfiber_asm_ppc64.S.o:
	cd /home/gamer/github_projects/swiftshader/build && $(MAKE) $(MAKESILENT) -f third_party/marl/CMakeFiles/marl.dir/build.make third_party/marl/CMakeFiles/marl.dir/src/osfiber_asm_ppc64.S.o
.PHONY : src/osfiber_asm_ppc64.S.o

src/osfiber_asm_x64.o: src/osfiber_asm_x64.S.o

.PHONY : src/osfiber_asm_x64.o

# target to build an object file
src/osfiber_asm_x64.S.o:
	cd /home/gamer/github_projects/swiftshader/build && $(MAKE) $(MAKESILENT) -f third_party/marl/CMakeFiles/marl.dir/build.make third_party/marl/CMakeFiles/marl.dir/src/osfiber_asm_x64.S.o
.PHONY : src/osfiber_asm_x64.S.o

src/osfiber_asm_x86.o: src/osfiber_asm_x86.S.o

.PHONY : src/osfiber_asm_x86.o

# target to build an object file
src/osfiber_asm_x86.S.o:
	cd /home/gamer/github_projects/swiftshader/build && $(MAKE) $(MAKESILENT) -f third_party/marl/CMakeFiles/marl.dir/build.make third_party/marl/CMakeFiles/marl.dir/src/osfiber_asm_x86.S.o
.PHONY : src/osfiber_asm_x86.S.o

src/osfiber_mips64.o: src/osfiber_mips64.c.o

.PHONY : src/osfiber_mips64.o

# target to build an object file
src/osfiber_mips64.c.o:
	cd /home/gamer/github_projects/swiftshader/build && $(MAKE) $(MAKESILENT) -f third_party/marl/CMakeFiles/marl.dir/build.make third_party/marl/CMakeFiles/marl.dir/src/osfiber_mips64.c.o
.PHONY : src/osfiber_mips64.c.o

src/osfiber_mips64.i: src/osfiber_mips64.c.i

.PHONY : src/osfiber_mips64.i

# target to preprocess a source file
src/osfiber_mips64.c.i:
	cd /home/gamer/github_projects/swiftshader/build && $(MAKE) $(MAKESILENT) -f third_party/marl/CMakeFiles/marl.dir/build.make third_party/marl/CMakeFiles/marl.dir/src/osfiber_mips64.c.i
.PHONY : src/osfiber_mips64.c.i

src/osfiber_mips64.s: src/osfiber_mips64.c.s

.PHONY : src/osfiber_mips64.s

# target to generate assembly for a file
src/osfiber_mips64.c.s:
	cd /home/gamer/github_projects/swiftshader/build && $(MAKE) $(MAKESILENT) -f third_party/marl/CMakeFiles/marl.dir/build.make third_party/marl/CMakeFiles/marl.dir/src/osfiber_mips64.c.s
.PHONY : src/osfiber_mips64.c.s

src/osfiber_ppc64.o: src/osfiber_ppc64.c.o

.PHONY : src/osfiber_ppc64.o

# target to build an object file
src/osfiber_ppc64.c.o:
	cd /home/gamer/github_projects/swiftshader/build && $(MAKE) $(MAKESILENT) -f third_party/marl/CMakeFiles/marl.dir/build.make third_party/marl/CMakeFiles/marl.dir/src/osfiber_ppc64.c.o
.PHONY : src/osfiber_ppc64.c.o

src/osfiber_ppc64.i: src/osfiber_ppc64.c.i

.PHONY : src/osfiber_ppc64.i

# target to preprocess a source file
src/osfiber_ppc64.c.i:
	cd /home/gamer/github_projects/swiftshader/build && $(MAKE) $(MAKESILENT) -f third_party/marl/CMakeFiles/marl.dir/build.make third_party/marl/CMakeFiles/marl.dir/src/osfiber_ppc64.c.i
.PHONY : src/osfiber_ppc64.c.i

src/osfiber_ppc64.s: src/osfiber_ppc64.c.s

.PHONY : src/osfiber_ppc64.s

# target to generate assembly for a file
src/osfiber_ppc64.c.s:
	cd /home/gamer/github_projects/swiftshader/build && $(MAKE) $(MAKESILENT) -f third_party/marl/CMakeFiles/marl.dir/build.make third_party/marl/CMakeFiles/marl.dir/src/osfiber_ppc64.c.s
.PHONY : src/osfiber_ppc64.c.s

src/osfiber_x64.o: src/osfiber_x64.c.o

.PHONY : src/osfiber_x64.o

# target to build an object file
src/osfiber_x64.c.o:
	cd /home/gamer/github_projects/swiftshader/build && $(MAKE) $(MAKESILENT) -f third_party/marl/CMakeFiles/marl.dir/build.make third_party/marl/CMakeFiles/marl.dir/src/osfiber_x64.c.o
.PHONY : src/osfiber_x64.c.o

src/osfiber_x64.i: src/osfiber_x64.c.i

.PHONY : src/osfiber_x64.i

# target to preprocess a source file
src/osfiber_x64.c.i:
	cd /home/gamer/github_projects/swiftshader/build && $(MAKE) $(MAKESILENT) -f third_party/marl/CMakeFiles/marl.dir/build.make third_party/marl/CMakeFiles/marl.dir/src/osfiber_x64.c.i
.PHONY : src/osfiber_x64.c.i

src/osfiber_x64.s: src/osfiber_x64.c.s

.PHONY : src/osfiber_x64.s

# target to generate assembly for a file
src/osfiber_x64.c.s:
	cd /home/gamer/github_projects/swiftshader/build && $(MAKE) $(MAKESILENT) -f third_party/marl/CMakeFiles/marl.dir/build.make third_party/marl/CMakeFiles/marl.dir/src/osfiber_x64.c.s
.PHONY : src/osfiber_x64.c.s

src/osfiber_x86.o: src/osfiber_x86.c.o

.PHONY : src/osfiber_x86.o

# target to build an object file
src/osfiber_x86.c.o:
	cd /home/gamer/github_projects/swiftshader/build && $(MAKE) $(MAKESILENT) -f third_party/marl/CMakeFiles/marl.dir/build.make third_party/marl/CMakeFiles/marl.dir/src/osfiber_x86.c.o
.PHONY : src/osfiber_x86.c.o

src/osfiber_x86.i: src/osfiber_x86.c.i

.PHONY : src/osfiber_x86.i

# target to preprocess a source file
src/osfiber_x86.c.i:
	cd /home/gamer/github_projects/swiftshader/build && $(MAKE) $(MAKESILENT) -f third_party/marl/CMakeFiles/marl.dir/build.make third_party/marl/CMakeFiles/marl.dir/src/osfiber_x86.c.i
.PHONY : src/osfiber_x86.c.i

src/osfiber_x86.s: src/osfiber_x86.c.s

.PHONY : src/osfiber_x86.s

# target to generate assembly for a file
src/osfiber_x86.c.s:
	cd /home/gamer/github_projects/swiftshader/build && $(MAKE) $(MAKESILENT) -f third_party/marl/CMakeFiles/marl.dir/build.make third_party/marl/CMakeFiles/marl.dir/src/osfiber_x86.c.s
.PHONY : src/osfiber_x86.c.s

src/scheduler.o: src/scheduler.cpp.o

.PHONY : src/scheduler.o

# target to build an object file
src/scheduler.cpp.o:
	cd /home/gamer/github_projects/swiftshader/build && $(MAKE) $(MAKESILENT) -f third_party/marl/CMakeFiles/marl.dir/build.make third_party/marl/CMakeFiles/marl.dir/src/scheduler.cpp.o
.PHONY : src/scheduler.cpp.o

src/scheduler.i: src/scheduler.cpp.i

.PHONY : src/scheduler.i

# target to preprocess a source file
src/scheduler.cpp.i:
	cd /home/gamer/github_projects/swiftshader/build && $(MAKE) $(MAKESILENT) -f third_party/marl/CMakeFiles/marl.dir/build.make third_party/marl/CMakeFiles/marl.dir/src/scheduler.cpp.i
.PHONY : src/scheduler.cpp.i

src/scheduler.s: src/scheduler.cpp.s

.PHONY : src/scheduler.s

# target to generate assembly for a file
src/scheduler.cpp.s:
	cd /home/gamer/github_projects/swiftshader/build && $(MAKE) $(MAKESILENT) -f third_party/marl/CMakeFiles/marl.dir/build.make third_party/marl/CMakeFiles/marl.dir/src/scheduler.cpp.s
.PHONY : src/scheduler.cpp.s

src/thread.o: src/thread.cpp.o

.PHONY : src/thread.o

# target to build an object file
src/thread.cpp.o:
	cd /home/gamer/github_projects/swiftshader/build && $(MAKE) $(MAKESILENT) -f third_party/marl/CMakeFiles/marl.dir/build.make third_party/marl/CMakeFiles/marl.dir/src/thread.cpp.o
.PHONY : src/thread.cpp.o

src/thread.i: src/thread.cpp.i

.PHONY : src/thread.i

# target to preprocess a source file
src/thread.cpp.i:
	cd /home/gamer/github_projects/swiftshader/build && $(MAKE) $(MAKESILENT) -f third_party/marl/CMakeFiles/marl.dir/build.make third_party/marl/CMakeFiles/marl.dir/src/thread.cpp.i
.PHONY : src/thread.cpp.i

src/thread.s: src/thread.cpp.s

.PHONY : src/thread.s

# target to generate assembly for a file
src/thread.cpp.s:
	cd /home/gamer/github_projects/swiftshader/build && $(MAKE) $(MAKESILENT) -f third_party/marl/CMakeFiles/marl.dir/build.make third_party/marl/CMakeFiles/marl.dir/src/thread.cpp.s
.PHONY : src/thread.cpp.s

src/trace.o: src/trace.cpp.o

.PHONY : src/trace.o

# target to build an object file
src/trace.cpp.o:
	cd /home/gamer/github_projects/swiftshader/build && $(MAKE) $(MAKESILENT) -f third_party/marl/CMakeFiles/marl.dir/build.make third_party/marl/CMakeFiles/marl.dir/src/trace.cpp.o
.PHONY : src/trace.cpp.o

src/trace.i: src/trace.cpp.i

.PHONY : src/trace.i

# target to preprocess a source file
src/trace.cpp.i:
	cd /home/gamer/github_projects/swiftshader/build && $(MAKE) $(MAKESILENT) -f third_party/marl/CMakeFiles/marl.dir/build.make third_party/marl/CMakeFiles/marl.dir/src/trace.cpp.i
.PHONY : src/trace.cpp.i

src/trace.s: src/trace.cpp.s

.PHONY : src/trace.s

# target to generate assembly for a file
src/trace.cpp.s:
	cd /home/gamer/github_projects/swiftshader/build && $(MAKE) $(MAKESILENT) -f third_party/marl/CMakeFiles/marl.dir/build.make third_party/marl/CMakeFiles/marl.dir/src/trace.cpp.s
.PHONY : src/trace.cpp.s

# Help Target
help:
	@echo "The following are some of the valid targets for this Makefile:"
	@echo "... all (the default if no target is provided)"
	@echo "... clean"
	@echo "... depend"
	@echo "... edit_cache"
	@echo "... install"
	@echo "... install/local"
	@echo "... install/strip"
	@echo "... list_install_components"
	@echo "... rebuild_cache"
	@echo "... marl"
	@echo "... src/debug.o"
	@echo "... src/debug.i"
	@echo "... src/debug.s"
	@echo "... src/memory.o"
	@echo "... src/memory.i"
	@echo "... src/memory.s"
	@echo "... src/osfiber_aarch64.o"
	@echo "... src/osfiber_aarch64.i"
	@echo "... src/osfiber_aarch64.s"
	@echo "... src/osfiber_arm.o"
	@echo "... src/osfiber_arm.i"
	@echo "... src/osfiber_arm.s"
	@echo "... src/osfiber_asm_aarch64.o"
	@echo "... src/osfiber_asm_arm.o"
	@echo "... src/osfiber_asm_mips64.o"
	@echo "... src/osfiber_asm_ppc64.o"
	@echo "... src/osfiber_asm_x64.o"
	@echo "... src/osfiber_asm_x86.o"
	@echo "... src/osfiber_mips64.o"
	@echo "... src/osfiber_mips64.i"
	@echo "... src/osfiber_mips64.s"
	@echo "... src/osfiber_ppc64.o"
	@echo "... src/osfiber_ppc64.i"
	@echo "... src/osfiber_ppc64.s"
	@echo "... src/osfiber_x64.o"
	@echo "... src/osfiber_x64.i"
	@echo "... src/osfiber_x64.s"
	@echo "... src/osfiber_x86.o"
	@echo "... src/osfiber_x86.i"
	@echo "... src/osfiber_x86.s"
	@echo "... src/scheduler.o"
	@echo "... src/scheduler.i"
	@echo "... src/scheduler.s"
	@echo "... src/thread.o"
	@echo "... src/thread.i"
	@echo "... src/thread.s"
	@echo "... src/trace.o"
	@echo "... src/trace.i"
	@echo "... src/trace.s"
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	cd /home/gamer/github_projects/swiftshader/build && $(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
.PHONY : cmake_check_build_system

